#include"global.h"
#include<iostream>
short side;
short board[256]={
	0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,39,37,35,33,32,34,36,38,40,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,0 ,41,0 ,0 ,0 ,0 ,0 ,42,0 ,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,43,0 ,44,0 ,45,0 ,46,0 ,47,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,27,0 ,28,0 ,29,0 ,30,0 ,31,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,0 ,25,0 ,0 ,0 ,0 ,0 ,26,0 ,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,23,21,19,17,16,18,20,22,24,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
	0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 
};
/* 棋盘数组初始化*/
/********************************************************************************************/
short piece[48]={
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0xc7,0xc6,0xc8,0xc5,0xc9,0xc4,0xca,0xc3,0xcb,0xa4,0xaa,0x93,0x95,0x97,0x99,0x9b,
	0x37,0x36,0x38,0x35,0x39,0x34,0x3a,0x33,0x3b,0x54,0x5a,0x63,0x65,0x67,0x69,0x6b
};
/*
   保存双方棋子在数组上的位置,为辅助数组,这样生成走法时就不必再遍历棋盘数组,前16位无实际意义,只是
   为了让数组下标与棋子编码一致,当board数组更新时,piece数组也更新,当棋子被吃掉时,相应的编码置零
*/
//move Move_array[128];
//short Move_num=0;
/*********************************************************************************************/
mov best_move;
short max_depth;
long long node_num;
